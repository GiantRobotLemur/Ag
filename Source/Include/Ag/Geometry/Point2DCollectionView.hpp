//! @file Ag/Geometry/Point2DCollectionView.hpp
//! @brief The declaration of an object holding a view of Point2D values without
//! owning them so that optimised operations can be performed on groups of
//! elements.
//! @author GiantRobotLemur@na-se.co.uk
//! @date 2025
//! @copyright This file is part of the Silver (Ag) project which is released
//! under LGPL 3 license. See LICENSE file at the repository root or go to
//! https://github.com/GiantRobotLemur/Ag for full license details.
////////////////////////////////////////////////////////////////////////////////

#ifndef __AG_GEOMETRY_POINT2D_COLLECTION_VIEW_HPP__
#define __AG_GEOMETRY_POINT2D_COLLECTION_VIEW_HPP__

////////////////////////////////////////////////////////////////////////////////
// Dependent Header Files
////////////////////////////////////////////////////////////////////////////////
#include "Point2D.hpp"

////////////////////////////////////////////////////////////////////////////////
// Macro Definitions
////////////////////////////////////////////////////////////////////////////////

namespace Ag {
namespace Geom {

////////////////////////////////////////////////////////////////////////////////
// Data Type Declarations
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class Declarations
////////////////////////////////////////////////////////////////////////////////
//! @brief An object holding a view of Point2D values without
//! owning them so that optimised operations can be performed on groups of
//! elements.
class Point2DCollectionView
{
public:
    // Public Data Types
    using ValuePtr = Point2D *;
    using ValueCPtr = const Point2D *;
    using Collection = Point2DCollection;
    using CollectionRef = Point2DCollection &;
    using CollectionCRef = const Point2DCollection &;

    // Construction/Destruction
    //! @brief Constructs an empty collection view.
    constexpr Point2DCollectionView() noexcept : _source(nullptr), _count(0) {}
    ~Point2DCollectionView() = default;

    // Accessors
    constexpr bool isEmpty() const noexcept { return _count == 0; }

private:

    // Internal Fields
    ValueCPtr _source;
    size_t _count;
};

////////////////////////////////////////////////////////////////////////////////
// Function Declarations
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Templates
////////////////////////////////////////////////////////////////////////////////

}} // namespace Ag::Geom

#endif // Header guard
////////////////////////////////////////////////////////////////////////////////
